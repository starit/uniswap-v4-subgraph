type PoolManager @entity {
  # poolManager address
  id: ID!
  # amount of pools created
  poolCount: BigInt!
  # amoutn of transactions all time
  txCount: BigInt!

  modifyPositionCount: BigInt!
  swapCount: BigInt!

  # total liquidity
  totalLiquidity: BigInt!

  # Current lock length
  lockLength: BigInt!

  # protocol fee controller address
  protocolFeeController: Bytes!
  # 
  controllerGasLimit: BigInt!
  # current owner of the poolManager
  owner: ID!
}

type Pool @entity {
  # pool key
  id: ID!
  poolKey: Bytes!
  # creation
  createdAtTimestamp: BigInt!
  # block pool was created at
  createdAtBlockNumber: BigInt!
  # The following 5 parameters makes a pool unique
  currency0: Bytes!
  currency1: Bytes!
  fee: Int!
  tickSpacing: Int!
  hookAddress: Bytes!
  txCnt: BigInt!
  liquidity: BigInt!
  sqrtPrice: BigInt!
  # derived from sqrtPriceX96
  token0Price: BigDecimal!
  token1Price: BigDecimal!
  # current tick
  tick: BigInt! 
}

type Swap @entity {
  # transaction hash + "-" + index in swaps Transaction array
  id: ID!
  poolKey: Bytes!
  currency0: Bytes!
  currency1: Bytes!
  transaction: Transaction!

  # populated from the Swap event
  sender: Bytes!
  liquidity: BigInt!
  sqrtPriceX96: BigInt!
  amount0Delta: BigInt!
  amount1Delta: BigInt!
  tick: BigInt!
  logIndex: BigInt
  # derived from sqrtPriceX96
  token0Price: BigDecimal!
  token1Price: BigDecimal!
}



type Position @entity {
  id: ID!
  poolKey: Bytes!
  currency0: Bytes!
  currency1: Bytes!
  transaction: Transaction!

  # populated from the ModifyPosition event
  sender: Bytes!
  liquidity: BigInt!
  sqrtPriceX96: BigInt!
  tick: BigInt!
  logIndex: BigInt
  # derived from sqrtPriceX96
  token0Price: BigDecimal!
  token1Price: BigDecimal!
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # gas used during txn execution
  gasLimit: BigInt!
  gasPrice: BigInt!
  from: Bytes!
  to: Bytes
  # derived values
  position: [Position]! @derivedFrom(field: "transaction")
  swap: [Swap]! @derivedFrom(field: "transaction")
}

# hourly stats tracker for pool
type PoolHourData @entity {
  # format: <pool address>-<timestamp>
  id: ID!
  # unix timestamp for start of hour
  periodStartUnix: Int!
  # pointer to pool
  pool: Pool!
  # in range liquidity at end of period
  liquidity: BigInt!
  # current price tracker at end of period
  sqrtPrice: BigInt!
  # price of token0 - derived from sqrtPrice
  token0Price: BigDecimal!
  # price of token1 - derived from sqrtPrice
  token1Price: BigDecimal!
  # current tick at end of period
  tick: BigInt
  # numebr of transactions during period
  txCount: BigInt!
  # opening price of token0
  open: BigDecimal!
  # high price of token0
  high: BigDecimal!
  # low price of token0
  low: BigDecimal!
  # close price of token0
  close: BigDecimal!
}
